name: Deploy Hugo Site to Pages

###############################################################################
# 1. 트리거 조건
###############################################################################
on:
  push:
    branches:
      - main
    #paths:                         # ➜ Hugo 사이트에만 반응
    #  - 'content/**'
    #  - 'static/**'
    #  - 'themes/**'
    #  - 'archetypes/**'
    #  - 'assets/**'
    #  - 'hugo.*'
    #  - '.github/workflows/gh-pages.yml'

  workflow_dispatch:               # ➜ 수동 실행 버튼
    inputs:
      hugoVersion:
        description: "Hugo Version (optional)"
        required: false
        default: "0.122.0"

###############################################################################
# 2. 공통 설정
###############################################################################
concurrency:
  group: pages
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: read
  pages:    write
  id-token: write                 # deploy-pages OIDC

###############################################################################
# 3. JOBS
###############################################################################
jobs:
  ###########################################################################
  # 3-1. BUILD ─ Hugo → ./public
  ###########################################################################
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: "0.122.0"

    steps:
      # (A) 수동 실행 시 Hugo 버전 덮어쓰기
      - name: Override Hugo version if input provided
        if: ${{ github.event.inputs.hugoVersion }}
        run: echo "HUGO_VERSION=${{ github.event.inputs.hugoVersion }}" >> $GITHUB_ENV

      # (B) Hugo 설치
      - name: Install Hugo ${{ env.HUGO_VERSION }}
        run: |
          wget -O ${{ runner.temp }}/hugo.deb \
            https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_linux-amd64.deb && \
          sudo dpkg -i ${{ runner.temp }}/hugo.deb

      # (C) 소스 체크아웃
      - uses: actions/checkout@v4

      # (D) Pages 메타데이터 준비
      - id: pages
        uses: actions/configure-pages@v3

      # (E) (선택) 테마 서브모듈 초기화
      - name: Init submodules
        run: git submodule update --init --recursive

      # (F) Hugo 빌드
      - name: Build with Hugo
        run: hugo --verbose --baseURL "${{ steps.pages.outputs.base_url }}"

      # (G) 빌드 산출물 업로드
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  ###########################################################################
  # 3-2. DEPLOY ─ GitHub Pages 배포
  ###########################################################################
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url:  ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
